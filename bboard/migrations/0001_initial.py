# Generated by Django 3.0.2 on 2022-03-28 13:19

import bboard.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CarBrands',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(
                    choices=[(None, 'Выберите марку машины'), ('Audi', 'Audi'), ('BMW', 'BMW'), ('Chery', 'Chery'),
                             ('Chevrolet', 'Chevrolet'), ('Citroen', 'Citroen'), ('Daewoo', 'Daewoo'), ('Ford', 'Ford'),
                             ('Газ', 'Газ'), ('Geely', 'Geely'), ('Haval', 'Haval'), ('Honda', 'Honda'),
                             ('Hyundai', 'Hyundai'), ('Infiniti', 'Infiniti'), ('KIA', 'KIA'), ('Lada', 'Lada'),
                             ('Land Rover', 'Land Rover'), ('Lexus', 'Lexus'), ('Mini', 'Mini'), ('Mazda', 'Mazda'),
                             ('Mercedes-Benz', 'Mercedes-Benz'), ('Nissan', 'Nissan'), ('Opel', 'Opel'),
                             ('Porsche', 'Porsche'), ('Renault', 'Renault'), ('Skoda', 'Skoda'), ('Suzuki', 'Suzuki'),
                             ('Toyota', 'Toyota'), ('Volkswagen', 'Volkswagen'), ('Volvo', 'Volvo')], db_index=True,
                    max_length=20, verbose_name='Марка')),
            ],
            options={
                'verbose_name': 'Марка авто',
                'verbose_name_plural': 'Марки авто',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Rubric',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=20, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Рубрика',
                'verbose_name_plural': 'Рубрики',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number',
                 models.CharField(blank=True, max_length=16, null=True, unique=True, verbose_name='Номер телефона')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='День рождения')),
                (
                'user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PrivateMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('name', models.CharField(max_length=40)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CarModels',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, null=True, verbose_name='Модель')),
                ('brand',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='bboard.CarBrands',
                                   verbose_name='Марка')),
            ],
            options={
                'verbose_name': 'Модель авто',
                'verbose_name_plural': 'Модели авто',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Bb',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, validators=[
                    django.core.validators.MinLengthValidator(3, message='Название должно быть не меньше 3 символов!')],
                                           verbose_name='Товар')),
                ('content', models.TextField(blank=True, null=True, validators=[
                    django.core.validators.MinLengthValidator(5, message='Описание должно быть не меньше 5 символов!')],
                                             verbose_name='Описание')),
                ('price', models.FloatField(blank=True, null=True, verbose_name='Цена')),
                ('published', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Опубликовано')),
                ('buser', models.CharField(blank=True, max_length=20, null=True, verbose_name='Пользователь')),
                ('kind',
                 models.CharField(choices=[('b', 'Куплю'), ('s', 'Продам'), ('c', 'Обменяю'), ('r', 'Сдам в аренду')],
                                  default='s', max_length=1, verbose_name='Тип')),
                ('photo',
                 models.ImageField(blank=True, null=True, upload_to=bboard.models.Bb.user_dir, verbose_name='Фото')),
                ('rubric', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='bboard.Rubric',
                                             verbose_name='Рубрика')),
            ],
            options={
                'verbose_name': 'Объявление',
                'verbose_name_plural': 'Объявления',
                'ordering': ['-published'],
            },
        ),
        migrations.CreateModel(
            name='AdvUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_activated', models.BooleanField(default=True)),
                (
                'user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('bb_ptr',
                 models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True,
                                      primary_key=True, serialize=False, to='bboard.Bb')),
                ('mileage', models.IntegerField(blank=True, null=True, verbose_name='Пробег')),
                ('year', models.IntegerField(default='2020', verbose_name='Год выпуска')),
                ('is_competitive', models.IntegerField(blank=True, default=0, null=True)),
                ('body', models.PositiveSmallIntegerField(
                    choices=[(1, 'Седан'), (2, 'Купе'), (3, 'Хэтчбек 3 дв.'), (4, 'Хэтчбек 5 дв.'),
                             (5, 'Внедорожник 3 дв.'), (6, 'Внедорожник 5 дв.'), (7, 'Лифтбек'), (8, 'Кабриолет'),
                             (9, 'Универсал'), (10, 'Лимузин')], default=1, verbose_name='Тип кузова')),
                ('engine_type', models.CharField(
                    choices=[('b', 'Бензин'), ('d', 'Дизель'), ('e', 'Электро'), ('h', 'Гибрид'), ('g', 'Газ')],
                    default='b', max_length=1, verbose_name='Тип двигателя')),
                ('gear', models.CharField(
                    choices=[('r', 'Роботизированная'), ('a', 'Автоматическая'), ('v', 'Вариатор'),
                             ('m', 'Механическая')], default='m', max_length=1, verbose_name='Коробка передач')),
                ('drive',
                 models.PositiveSmallIntegerField(choices=[(1, 'Передний'), (2, 'Задний'), (3, 'Полный')], default=1,
                                                  verbose_name='Тип привода')),
                ('status', models.CharField(choices=[('n', 'Новая'), ('u', 'С пробегом')], default='u', max_length=1,
                                            verbose_name='Состояние')),
                ('equip',
                 models.CharField(choices=[('h', 'Максимальная'), ('m', 'Средняя'), ('s', 'Базовая')], default='s',
                                  max_length=1, verbose_name='Комплектация')),
                ('color', models.PositiveSmallIntegerField(
                    choices=[(1, 'Красный'), (2, 'Зеленый'), (3, 'Синий'), (4, 'Белый'), (5, 'Черный'), (6, 'Желтый'),
                             (7, 'Голубой'), (8, 'Оранжевый'), (9, 'Розовый'), (10, 'Коричневый'), (11, 'Серый'),
                             (12, 'Бордовый'), (13, 'Бежевый'), (14, 'Золотой')], default=4, verbose_name='Цвет')),
                ('pts', models.PositiveSmallIntegerField(choices=[(1, 'Оригинал'), (2, 'Дубликат')], default=1,
                                                         verbose_name='ПТС')),
                ('owners', models.PositiveSmallIntegerField(
                    choices=[(1, 'Один'), (2, 'Два'), (3, 'Три и более'), (4, 'Новый авто')], default=1,
                    verbose_name='Собственников в ПТС')),
                ('model',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='bboard.CarModels',
                                   verbose_name='Модель')),
            ],
            options={
                'verbose_name': 'Авто объявление',
                'verbose_name_plural': 'Авто объявления',
                'ordering': ['-published'],
            },
            bases=('bboard.bb',),
        ),
    ]
